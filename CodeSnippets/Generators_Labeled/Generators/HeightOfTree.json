{
    "font-normal": "JetBrainsMono-Regular.ttf",
    "font-bold": "JetBrainsMono-Bold.ttf",
    "font-italic": "JetBrainsMono-BoldItalic.ttf",
    "font-bold-italic": "JetBrainsMono-Italic.ttf",
    "font-size": 19,
    "width-margin": 5,
    "height-margin": 5,
    "spacing": 1,
    "background-color": [
        255,
        255,
        255
    ],
    "source-code": [
        "    [AOI=class_declaration]public static class Node {",
        "        Node left, right;",
        "        int value;",
        "    }[/AOI]",
        "",
        "    [AOI=method_signature] public static int [AOI=method_identifier]getHeightOfTree[/AOI][AOI=method_argument_declaration](Node n)[/AOI][/AOI] {",
        "        [AOI=if_statement][AOI=if_head] if (n.left == null && n.right == null) [/AOI][AOI=if_body] {",
        "            return 1;",
        "        }[/AOI][/AOI]",
        "        [AOI=if_statement][AOI=if_head] if (n.left == null) [/AOI][AOI=if_body] {",
        "            return [AOI=arithmetic_expression] 1 + [AOI=method_call][AOI=method_call_identifier]getHeightOfTree[/AOI][AOI=method_arguments](n.right)[/AOI][/AOI] [/AOI];",
        "        }[/AOI][/AOI]",
        "        [AOI=if_statement][AOI=if_head] if (n.right == null) [/AOI][AOI=if_body] {",
        "            return [AOI=arithmetic_expression] 1 + [AOI=method_call][AOI=method_call_identifier]getHeightOfTree[/AOI][AOI=method_arguments](n.left)[/AOI][/AOI] [/AOI];",
        "        }[/AOI][/AOI]",
        "        return [AOI=arithmetic_expression]1 + [AOI=method_call]Math.[AOI=method_call_identifier]max[/AOI][AOI=method_arguments]([AOI=method_call][AOI=method_call_identifier]getHeightOfTree[/AOI][AOI=method_arguments](n.left)[/AOI][/AOI], [AOI=method_call][AOI=method_call_identifier]getHeightOfTree[/AOI][AOI=method_arguments](n.right)[/AOI][/AOI])[/AOI][/AOI] [/AOI];",
        "    }"
    ]
}