{
    "font-normal": "JetBrainsMono-Regular.ttf",
    "font-bold": "JetBrainsMono-Bold.ttf",
    "font-italic": "JetBrainsMono-BoldItalic.ttf",
    "font-bold-italic": "JetBrainsMono-Italic.ttf",
    "font-size": 19,
    "width-margin": 5,
    "height-margin": 5,
    "spacing": 1,
    "background-color": [
        255,
        255,
        255
    ],
    "source-code": [
        "    [AOI=method_signature]public static int[] [AOI=method_identifier]bogo[/AOI][AOI=method_argument_declaration](int[] field)[/AOI][/AOI] {",
        "        Random r = [AOI=method_call] new [AOI=method_call_identifier] Random [/AOI][AOI=method_arguments] () [/AOI];",
        "",
        "        [AOI=while][AOI=while_head]while (!isFinished(field)) [/AOI][AOI=while_body]{",
        "            int a = [AOI=method_call]r.[AOI=method_call_identifier]nextInt[/AOI][AOI=method_arguments](field.length)[/AOI][/AOI];",
        "            int b = [AOI=method_call]r.[AOI=method_call_identifier]nextInt[/AOI][AOI=method_arguments](field.length)[/AOI][/AOI];",
        "",
        "            int temp = field[a];",
        "            field[a] = field[b];",
        "            field[b] = temp;",
        "        }[/AOI][/AOI]",
        "",
        "        return field;",
        "    }",
        "",
        "    [AOI=method_signature]public static boolean [AOI=method_identifier]isFinished[/AOI][AOI=method_argument_declaration](int[] field)[/AOI][/AOI] {",
        "        [AOI=for][AOI=for_head]for (int i = 0; i < field.length - 1; i++)[/AOI][AOI=for_body] {",
        "            [AOI=if][AOI=if_head] if (field[i] > field[[AOI=arithmetic_expression]i + 1[/AOI]]) [/AOI][AOI=if_body] {",
        "                return false;",
        "            }[/AOI][/AOI]",
        "        }[/AOI][/AOI]",
        "        return true;",
        "    }"
    ]
}
